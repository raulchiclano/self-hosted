version: '3'
services:
  kanboard:
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.services.kanboard.loadbalancer.server.port=80
      - traefik.http.routers.kanboard.entrypoints=web
      - traefik.http.routers.kanboard.rule=Host(`${FQDN}`)
      - traefik.http.middlewares.kanboard-https-redirect.redirectscheme.scheme=websecure
      - traefik.http.routers.kanboard.middlewares=kanboard-https-redirect
      - traefik.http.routers.kanboard-secure.entrypoints=websecure
      - traefik.http.routers.kanboard-secure.rule=Host(`${FQDN}`)
      - traefik.http.routers.kanboard-secure.tls=true
      - traefik.http.routers.kanboard-secure.tls.certresolver=letsencrypt

networks:
  proxy:
    external: true

services:
  app:
    build:
      context: ../
      dockerfile: docker/Dockerfile
    container_name: focalboard
    depends_on:
      - focalboard-db
    environment:
      - VIRTUAL_HOST=localhost
      - VIRTUAL_PORT=8000
      - VIRTUAL_PROTO=http
    volumes:
      - "./config.json:/opt/focalboard/config.json"
    restart: always
    networks:
      - proxy

  proxy:
    image: jwilder/nginx-proxy:latest
    container_name: focalboard-proxy
    restart: always
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - proxy

  focalboard-db:
    image: postgres:latest
    container_name: focalboard-postgres
    restart: always
    volumes:
      - "./data:/var/lib/postgresql/data"
    environment:
      POSTGRES_DB: boards
      POSTGRES_USER: boardsuser
      POSTGRES_PASSWORD: boardsuser-password

networks:
  proxy:
